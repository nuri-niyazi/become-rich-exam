{"version":3,"sources":["components/Answer.js","utils/Level-data.js","components/Jokers.js","components/Levels.js","components/Question.js","utils/Constants.js","components/Game.js","components/App.js","serviceWorker.js","index.js"],"names":["Answer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onHandleClick","answerId","onSelectAnswer","state","allAnswers","nextProps","setState","_this2","letters","btns","map","answer","i","react_default","a","createElement","className","key","disabled","canAnswer","onClick","Component","Level_data","currentLevel","guaranteedAmounts","Jokers","onHandleFiftyFifty","onClickFiftyFifty","onHandlePhoneFriend","onClickPhoneFriend","onHandleAskAudience","onClickAskAudience","canUseLifelines","usedLifelines","index_es","icon","faAdjust","title","color","size","faPhone","faUsers","Levels","scores","document","querySelector","style","transform","concat","len","data","slice","length","winningsLi","reverse","classNames","level-row","color-white","color-orange","components_Jokers","Question","question","QuestionType","EASY","MEDIUM","HARD","Game","startGame","prepareQuestion","text","getQuestion","sessionToken","retrieveQuestions","axios","get","then","res","token","catch","error","console","type","response_code","errorMsg","Error","decodeURIComponent","results","incorrectAnswers","incorrect_answers","item","correctAnswer","correct_answer","shuffle","correctAnswerId","indexOf","arr","j","Math","floor","random","_ref","hightlightCorrectAns","allAnswerButtons","classList","remove","add","hightlightSelectedAns","id","hightlightWrongAns","status","finishGame","canType","handleSelectAnswer","querySelectorAll","setTimeout","setText","handleFiftyFifty","assign","toConsumableArray","splice","handlePhoneFriend","notDisabledAnswers","filter","innerText","handleAskAudience","audienceAnswer","val","includes","split","components_Levels","components_Question","components_Answer","App","components_Game","Boolean","window","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea80a929.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Answer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allAnswers: this.props.allAnswers\n        }\n    }\n\n    onHandleClick = (answerId) => {\n        if (typeof this.props.onSelectAnswer === 'function') {\n            this.props.onSelectAnswer(answerId);\n        }\n    };\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.allAnswers !== this.props.allAnswers) {\n            this.setState({\n                allAnswers: nextProps.allAnswers\n            });\n        }\n    }\n\n    render() {\n        const letters = ['A: ', 'B: ', 'C: ', 'D: '];\n        const btns = this.state.allAnswers.map((answer, i) => {\n            return <button\n                className='answerButton'\n                key={answer}\n                disabled={!this.props.canAnswer[i]}\n                onClick={() => this.onHandleClick(i)}>\n                {letters[i]}{answer}\n            </button>\n        });\n\n        return <div className='answerContainer'>\n            {btns}\n        </div>\n    }\n}\n\nexport default Answer;\n","export default {\n    currentLevel: [\"50\", \"100\", \"200\", \"300\", \"500\", \"700\", \"1 000\", \"1 500\", \"2 000\", \"2 500\", \"5 000\", \"10 000\", \"15 000\", \"20 000\", \"100 000\"],\n    guaranteedAmounts: [0, 0, 0, 0, 0, 500, 500, 500, 500, 500, 2500, 2500, 2500, 2500, 100000]\n};\n","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faPhone} from '@fortawesome/free-solid-svg-icons'\nimport {faUsers} from '@fortawesome/free-solid-svg-icons'\nimport {faAdjust} from '@fortawesome/free-solid-svg-icons'\n\nclass Jokers extends Component {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.canUseLifelines !== this.props.canUseLifelines) {\n            this.setState({\n                canUseLifelines: nextProps.canUseLifelines\n            });\n        }\n    }\n\n    onHandleFiftyFifty = () => {\n        if (typeof this.props.onClickFiftyFifty === 'function') {\n            this.props.onClickFiftyFifty();\n        }\n    };\n\n    onHandlePhoneFriend = () => {\n        if (typeof this.props.onClickPhoneFriend === 'function') {\n            this.props.onClickPhoneFriend();\n        }\n    };\n\n    onHandleAskAudience = () => {\n        if (typeof this.props.onClickAskAudience === 'function') {\n            this.props.onClickAskAudience();\n        }\n    };\n\n    render() {\n        return <div className=\"margin-10\">\n            <button className='jokerBtn' disabled={this.props.usedLifelines[0]}\n                    onClick={() => this.onHandleFiftyFifty()}>\n                <FontAwesomeIcon icon={faAdjust} title=\"50:50\" color={this.props.usedLifelines[0] ? \"red\" : \"white\"} size=\"2x\"/>\n            </button>\n            <button className='jokerBtn' disabled={this.props.usedLifelines[1]}\n                    onClick={() => this.onHandlePhoneFriend()}>\n                <FontAwesomeIcon icon={faPhone} title=\"Phone a Friend\" color={this.props.usedLifelines[1] ? \"red\" : \"white\"} size=\"2x\"/>\n            </button>\n            <button className='jokerBtn' disabled={this.props.usedLifelines[2]}\n                    onClick={() => this.onHandleAskAudience()}>\n                <FontAwesomeIcon icon={faUsers}  title=\"Ask the Audience\" color={this.props.usedLifelines[2] ? \"red\" : \"white\"} size=\"2x\"/>\n            </button>\n        </div>\n    }\n}\n\nexport default Jokers;\n","import React, {Component} from 'react';\n\nimport data from \"../utils/Level-data\";\nimport Jokers from \"./Jokers\";\nimport classNames from 'classnames';\n\nclass Levels extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            scores: this.props.scores,\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.scores !== this.props.scores) {\n            this.setState({\n                scores: nextProps.scores,\n            });\n        }\n        if (this.props.scores) {\n            const hl = document.querySelector('.currentLevel');\n            hl.style.transform = `translate(0, ${this.state.scores * -30}px)`\n        }\n    }\n\n    onHandleFiftyFifty = () => {\n        if (typeof this.props.onClickFiftyFifty === 'function') {\n            this.props.onClickFiftyFifty();\n        }\n    };\n\n    onHandlePhoneFriend = () => {\n        if (typeof this.props.onClickPhoneFriend === 'function') {\n            this.props.onClickPhoneFriend();\n        }\n    };\n\n    onHandleAskAudience = () => {\n        if (typeof this.props.onClickAskAudience === 'function') {\n            this.props.onClickAskAudience();\n        }\n    };\n\n    render() {\n        let len = data.currentLevel.slice(0).length;\n        const winningsLi = data.currentLevel.slice(0).reverse().map((key, i) => (\n            <div key={key} className={classNames({\n                    'level-row' : true,\n                    'color-white' : i % 5 === 0,\n                    'color-orange' : i % 5 !== 0\n                })}>\n                <span className=\"number1\"> {len - i}</span>\n                <span>{key}</span>\n            </div>\n        ))\n        return <div className='scorePanel'>\n            <div className='winning'>\n                <Jokers usedLifelines={this.props.usedLifelines}\n                        onClickFiftyFifty={this.props.onClickFiftyFifty}\n                        onClickPhoneFriend={this.props.onClickPhoneFriend}\n                        onClickAskAudience={this.props.onClickAskAudience}/>\n                {winningsLi}\n                {this.state.scores ? <span className='currentLevel'/> : null}\n            </div>\n        </div>\n    }\n}\n\nexport default Levels;\n","import React, {Component} from 'react';\n\nclass Question extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: this.props.question\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            question: nextProps.question\n        });\n    }\n\n\n    render() {\n        return (\n            <div className = 'question'>\n                <p>{this.state.question}</p>\n            </div>\n        );\n    }\n}\n\nexport default Question;\n","let QuestionType = {\n    EASY: 'easy',\n    MEDIUM: 'medium',\n    HARD: 'hard'\n}\n\nexport default QuestionType;","import React, {Component} from 'react';\nimport Answer from './Answer';\nimport Levels from './Levels';\nimport Question from './Question';\nimport QuestionType from '../utils/Constants';\nimport axios from 'axios';\nimport data from '../utils/Level-data';\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: [],\n            allAnswers: [],\n            incorrectAnswers: [],\n            correctAnswerId: null,\n            canAnswer: [false, false, false, false],\n            text: \"\",\n            scores: 0,\n            usedLifelines: [false, false, false]\n        }\n    }\n\n    componentDidMount() {\n        this.startGame();\n    }\n\n    startGame = () => {\n        this.prepareQuestion([true, true, true]);\n        this.setState({\n            text: `Hello! This is your first question!`,\n            scores: 0,\n            usedLifelines: [false, false, false]\n        });\n    }\n\n    getQuestion = () => {\n        if (!this.sessionToken) {\n            axios.get(`https://opentdb.com/api_token.php?command=request`)\n                .then(res => {\n                    this.sessionToken = res.data.token;\n                    this.retrieveQuestions();\n                }).catch(error => {\n                console.error(error);\n            });\n        } else {\n            this.retrieveQuestions();\n        }\n    }\n\n    retrieveQuestions = () => {\n        let type = QuestionType.EASY;\n        if (this.state.scores > 5 && this.state.scores <= 10) {\n            type = QuestionType.MEDIUM;\n        } else if (this.state.scores > 10) {\n            type = QuestionType.HARD;\n        }\n\n        axios.get(`https://opentdb.com/api.php?amount=1&type=multiple&encode=url3986&difficulty=${type}&token=${this.sessionToken}`)\n            .then(res => {\n                if (!res.data.response_code) {\n                    const question = decodeURIComponent(res.data.results[0].question);\n                    const incorrectAnswers = res.data.results[0].incorrect_answers.map(item => decodeURIComponent(item));\n                    const correctAnswer = decodeURIComponent(res.data.results[0].correct_answer);\n                    const allAnswers = this.shuffle(incorrectAnswers.concat(correctAnswer));\n                    const correctAnswerId = allAnswers.indexOf(correctAnswer);\n                    this.setState({question, allAnswers, correctAnswerId, incorrectAnswers});\n                } else if (res.data.response_code === 3) {\n                    this.getQuestion();\n                } else {\n                    let errorMsg = \"Error: Could not retrieve data from the server\";\n                    this.setState({\n                        text: errorMsg\n                    });\n                    throw Error(errorMsg);\n                }\n\n            }).catch(error => {\n            console.error(error);\n        });\n    }\n\n    shuffle = arr => {\n        for (let i = arr.length; i; i--) {\n            let j = Math.floor(Math.random() * i);\n            [arr[i - 1], arr[j]] = [arr[j], arr[i - 1]];\n        }\n\n        return arr;\n    }\n\n    hightlightCorrectAns = () => {\n        this.state.allAnswerButtons[this.state.correctAnswerId].classList.remove('selected');\n        this.state.allAnswerButtons[this.state.correctAnswerId].classList.add('correct');\n    }\n\n    hightlightSelectedAns = id => {\n        this.state.allAnswerButtons[id].classList.add('selected');\n        this.state.allAnswerButtons[id].disabled = true;\n    }\n\n    hightlightWrongAns = id => {\n        this.state.allAnswerButtons[id].classList.remove('selected');\n        this.state.allAnswerButtons[id].classList.add('wrong');\n        this.state.allAnswerButtons[id].disabled = true;\n    }\n\n    prepareQuestion = status => {\n        this.getQuestion();\n        this.setState({\n            usedLifelines: status,\n            canAnswer: [true, true, true, true],\n        });\n    }\n\n    finishGame = text => {\n        this.setState({\n            usedLifelines: [false, false, false],\n            canAnswer: [false, false, false, false],\n            canType: true,\n            text: text,\n        });\n    }\n\n\n    handleSelectAnswer = (id) => {\n        this.state.allAnswerButtons = document.querySelectorAll('.answerButton');\n        this.hightlightSelectedAns(id);\n        this.setState({\n            canAnswer: [false, false, false, false],\n        });\n\n        setTimeout(() => {\n            if (id === this.state.correctAnswerId) {\n                this.hightlightCorrectAns();\n                this.setState({\n                    scores: this.state.scores + 1,\n                    canAnswer: [false, false, false, false],\n                });\n\n                if (this.state.scores < 15) {\n                    this.setText('Correct answer!');\n                    this.prepareQuestion(this.state.usedLifelines);\n                } else {\n                    this.setState({\n                        canAnswer: [false, false, false, false],\n                    })\n                    this.setText(`Congratulations! You've just won a  ${data.guaranteedAmounts[this.state.scores - 1]}`)\n                }\n\n            } else {\n                this.hightlightCorrectAns();\n                this.hightlightWrongAns(id);\n                this.finishGame(`Wrong answer! You earn ${data.guaranteedAmounts[this.state.scores]}`);\n                this.setState({\n                    canAnswer: [true, true, true, true],\n                    scores: 0\n                });\n                setTimeout(() => this.startGame(), 700)\n            }\n            setTimeout(() => this.setText(), 2500)\n        }, 1000);\n    }\n\n    setText = text => {\n        this.setState({\n            text: text,\n        });\n    }\n\n    handleFiftyFifty = () => {\n        this.setText(\"Let's highlight two wrong answers!\");\n        let usedLifelines = Object.assign(this.state.usedLifelines);\n        usedLifelines[0] = true;\n        this.setState({\n            usedLifelines: usedLifelines\n        });\n        let allAnswerButtons = [...document.querySelectorAll(\".answerButton\")];\n        allAnswerButtons.splice(this.state.correctAnswerId, 1);\n        this.shuffle(allAnswerButtons);\n        for (let i = 0; i < 2; i++) {\n            allAnswerButtons[i].disabled = true;\n            allAnswerButtons[i].classList.add('wrong')\n        }\n    }\n\n    handlePhoneFriend = () => {\n        let allAnswerButtons = this.shuffle([...document.querySelectorAll(\".answerButton\")]);\n        let notDisabledAnswers = allAnswerButtons.filter(i => i.disabled === false);\n\n        let usedLifelines = Object.assign(this.state.usedLifelines);\n        usedLifelines[1] = true;\n        this.setState({\n            usedLifelines: usedLifelines,\n            text: notDisabledAnswers[0].innerText\n        })\n    }\n\n    handleAskAudience = () => {\n        let audienceAnswer;\n\n        let percentage = (Math.random() * 100) + 1;\n        if (percentage <= 70) {\n            audienceAnswer = this.state.allAnswers.filter(val => !this.state.incorrectAnswers.includes(val));\n        } else {\n            let allAnswerButtons = this.shuffle([...document.querySelectorAll(\".answerButton\")]);\n            let notDisabledAnswers = allAnswerButtons.filter(i => i.disabled === false);\n\n            for (let i = 0; i < notDisabledAnswers.length; i++) {\n                for (let j = 0; j < this.state.incorrectAnswers.length; j++) {\n                    if (notDisabledAnswers[i].innerText.split(\": \")[1] === this.state.incorrectAnswers[j]) {\n                        audienceAnswer = this.state.incorrectAnswers[j];\n                        break;\n                    }\n                }\n                if (audienceAnswer) {\n                    break;\n                }\n            }\n        }\n\n        let usedLifelines = Object.assign(this.state.usedLifelines);\n        usedLifelines[2] = true;\n        this.setState({\n            usedLifelines: usedLifelines,\n            text: audienceAnswer\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"level-panel\">\n                    <Levels scores={this.state.scores} usedLifelines={this.state.usedLifelines}\n                            onClickFiftyFifty={this.handleFiftyFifty}\n                            onClickPhoneFriend={this.handlePhoneFriend}\n                            onClickAskAudience={this.handleAskAudience}/>\n                </div>\n\n                <div className=\"game-container\">\n                    <h1 className='text'>{this.state.text}</h1>\n                    <Question question={this.state.question}/>\n                    <Answer allAnswers={this.state.allAnswers} onSelectAnswer={this.handleSelectAnswer}\n                            canAnswer={this.state.canAnswer}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from \"./Game\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}